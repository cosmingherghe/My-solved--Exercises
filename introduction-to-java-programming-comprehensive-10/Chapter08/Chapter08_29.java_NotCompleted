/**
	(Identical arrays) The two-dimensional arrays m1 and m2 are identical if they
	have the same contents. Write a method that returns true if m1 and m2 are identical,
	using the following header:
	
	public static boolean equals(int[][] m1, int[][] m2)
	
	Write a test program that prompts the user to enter two 3 * 3 arrays of integers
	and displays whether the two are identical. Here are the sample runs.
	
	Enter list1: 51 25 22 6 1 4 24 54 6
	Enter list2: 51 22 25 6 1 4 24 54 6
	The two arrays are identical
	
	Enter list1: 51 5 22 6 1 4 24 54 6
	Enter list2: 51 22 25 6 1 4 24 54 6
	The two arrays are not identical
*/

import java.util.*;

public class IdenticalArrays{
	public static void main(String[] args) { 
	/**	
		int[][] matrix1 = new int[3][3]; 
		int[][] matrix2 = new int[3][3];

		getMatrix(matrix1, 1);
		getMatrix(matrix2, 2);
	*/	
	
		int[][] matrix1 = {{1, 1, 1}, {2, 2, 2},{3, 3, 3}};
		int[][] matrix2 = {{1, 1, 1}, {2, 2, 2},{3, 3, 3}};
		
		System.out.println("The two arrays are" + ( (equals(matrix1, matrix2)) ? "" : " not" ) + " strictly identical");

	}
	
	public static boolean equals(int[][] m1, int[][] m2) {

		boolean[] numberFound = new boolean[m2.length];
		
		for(int i = 0; i < m1.length; i++) {
			for(int j = 0; j < m1[i].length; j++) { 
				//foreach number in Matrix1 check for a match in Matrix2
				for(int z = 0; z < m2[i].length; j++) {
					System.out.println("m1[" + i + "][" + j + "]");
					//if number was found mark it so it would not be checked again
					if( !numberFound[i] && m1[i][j] == m2[j][z] ) {

						numberFound[i] = !numberFound[i];
						break;
					}
				}
			} 
		}
		return true;
	}
	
	public static int[][] getMatrix(int[][] mtrx, int lineNumber) {
	
		Scanner input = new Scanner(System.in);
		System.out.println("(3 * 3 arrays) Enter list " + lineNumber + " : ");
		
		for(int i = 0; i < mtrx.length; i++) {
			for(int j = 0; j < mtrx[i].length; j++) { 
				mtrx[i][j] = input.nextInt(); 
			}
		}
		return mtrx;
	}
	 
}
